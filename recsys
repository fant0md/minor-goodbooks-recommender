{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"recsys","provenance":[{"file_id":"10mz0zioz49wsMAB1qeGcv2JhDk5FK-Rn","timestamp":1617715294379},{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1617111677772}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"27bSxgcVgnIM"},"source":["# import"]},{"cell_type":"code","metadata":{"id":"f9CgNT1_yBnm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1618674208673,"user_tz":-180,"elapsed":17085,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"9232c590-c0f9-442d-ea46-52c9603e2957"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"z-R85g_BYJ-e"},"source":["%cd /content/drive/My Drive/Packages\n","\n","import pandas as pd\n","import numpy as np\n","import scipy.sparse as sps\n","import time\n","\n","%cd /content/drive/My Drive/GitHub/minor-goodbooks-recommender"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pk4AFFwoYGzr","executionInfo":{"status":"ok","timestamp":1618562447078,"user_tz":-180,"elapsed":59270,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"62b84054-9a4e-4ec2-9224-70db6f682796"},"source":["ratings = pd.read_csv('data/ratings.csv')\n","ratings\n","##too big!"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>book_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>258</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4081</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>260</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>9296</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2318</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5976474</th>\n","      <td>49925</td>\n","      <td>510</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976475</th>\n","      <td>49925</td>\n","      <td>528</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5976476</th>\n","      <td>49925</td>\n","      <td>722</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5976477</th>\n","      <td>49925</td>\n","      <td>949</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976478</th>\n","      <td>49925</td>\n","      <td>1023</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5976479 rows × 3 columns</p>\n","</div>"],"text/plain":["         user_id  book_id  rating\n","0              1      258       5\n","1              2     4081       4\n","2              2      260       5\n","3              2     9296       5\n","4              2     2318       3\n","...          ...      ...     ...\n","5976474    49925      510       5\n","5976475    49925      528       4\n","5976476    49925      722       4\n","5976477    49925      949       5\n","5976478    49925     1023       4\n","\n","[5976479 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RcejLpyzs6CP","executionInfo":{"status":"ok","timestamp":1618562447081,"user_tz":-180,"elapsed":59249,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"1aafd9d4-c38a-4730-8e39-b90de43d25e8"},"source":["ratings.user_id.nunique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["53424"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BVzFuZkJdT-0","executionInfo":{"status":"ok","timestamp":1618562447084,"user_tz":-180,"elapsed":59233,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"a3e74aab-d6e3-4eea-edba-858001e2fdc4"},"source":["def sparsity(df):\n","  return 1 - len(df) / (df.user_id.nunique() * df.book_id.nunique())\n","\n","sparsity(ratings)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.988813119571728"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jQDj6sTvSDtG","executionInfo":{"status":"ok","timestamp":1618562449087,"user_tz":-180,"elapsed":61219,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"3af35955-1a11-47bc-afa0-1b15f03bf9ab"},"source":["from sklearn.model_selection import train_test_split\n","_, random_users = train_test_split(ratings.user_id.unique(), test_size = 0.05, random_state = 322)\n","\n","ratings_random = ratings.loc[ratings['user_id'].isin(random_users)]\n","ratings_random"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>book_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>629</th>\n","      <td>58</td>\n","      <td>26</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>630</th>\n","      <td>58</td>\n","      <td>58</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>631</th>\n","      <td>58</td>\n","      <td>18</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>632</th>\n","      <td>58</td>\n","      <td>14</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>58</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5976331</th>\n","      <td>17635</td>\n","      <td>1922</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976455</th>\n","      <td>10622</td>\n","      <td>6810</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5976457</th>\n","      <td>10622</td>\n","      <td>610</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976458</th>\n","      <td>53358</td>\n","      <td>253</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976459</th>\n","      <td>53358</td>\n","      <td>695</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>298176 rows × 3 columns</p>\n","</div>"],"text/plain":["         user_id  book_id  rating\n","629           58       26       1\n","630           58       58       4\n","631           58       18       5\n","632           58       14       3\n","633           58        2       3\n","...          ...      ...     ...\n","5976331    17635     1922       5\n","5976455    10622     6810       4\n","5976457    10622      610       5\n","5976458    53358      253       5\n","5976459    53358      695       5\n","\n","[298176 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ros-fiFfSOuR","executionInfo":{"status":"ok","timestamp":1618562449089,"user_tz":-180,"elapsed":61204,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"8d1e6791-2d22-4b1f-ac07-cda003963e74"},"source":["sparsity(ratings_random)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9888295481109852"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"1Gl3wUiOAnCI"},"source":["ratings_random.to_csv(drivepath+'ratings_random.csv', index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cAXqaSkQxDtc","executionInfo":{"status":"ok","timestamp":1618562449850,"user_tz":-180,"elapsed":61929,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"b91c6c11-2bf7-4804-d459-0d8be9f768b4"},"source":["ratings"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>book_id</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>258</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4081</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>260</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>9296</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2318</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>5976474</th>\n","      <td>49925</td>\n","      <td>510</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976475</th>\n","      <td>49925</td>\n","      <td>528</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5976476</th>\n","      <td>49925</td>\n","      <td>722</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5976477</th>\n","      <td>49925</td>\n","      <td>949</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>5976478</th>\n","      <td>49925</td>\n","      <td>1023</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5976479 rows × 3 columns</p>\n","</div>"],"text/plain":["         user_id  book_id  rating\n","0              1      258       5\n","1              2     4081       4\n","2              2      260       5\n","3              2     9296       5\n","4              2     2318       3\n","...          ...      ...     ...\n","5976474    49925      510       5\n","5976475    49925      528       4\n","5976476    49925      722       4\n","5976477    49925      949       5\n","5976478    49925     1023       4\n","\n","[5976479 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GLewlMemcJAs","executionInfo":{"status":"ok","timestamp":1618562452874,"user_tz":-180,"elapsed":64937,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"635017c5-33c2-45ab-b39d-a7772960c600"},"source":["ratings.groupby('book_id').aggregate({'rating' : 'count'}).hist(bins=1000)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f2503531b50>]],\n","      dtype=object)"]},"metadata":{"tags":[]},"execution_count":10},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"4JTcGAQSkzM6"},"source":["ratings_train, ratings_test = train_test_split(ratings_random, test_size = 0.2, random_state = 322)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"yQSMaVJugqLq"},"source":["# prep"]},{"cell_type":"code","metadata":{"id":"Uq4dVmvFgNff"},"source":["%cd /content/drive/My Drive/Packages\n","\n","from surprise import Reader, Dataset, accuracy\n","from surprise.model_selection import KFold, GridSearchCV\n","from surprise.model_selection.validation import cross_validate\n","from surprise import NormalPredictor, KNNWithMeans, KNNWithZScore, SVD, SVDpp\n","\n","%cd /content/drive/My Drive/GitHub/minor-goodbooks-recommender"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"u5Qn9to8xfMs"},"source":["kf = KFold(n_splits=5, random_state = 322)\n","\n","reader = Reader(rating_scale=(1, 5))\n","data = Dataset.load_from_df(ratings_random, reader)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h0Jx2uGvaft1"},"source":["data_train, data_test = Dataset.load_from_df(ratings_train, reader), Dataset.load_from_df(ratings_test, reader)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"M2-zZZGBgP-u"},"source":["#from surprise.model_selection.split import train_test_split as surprise_train_test_split\n","#data_train, data_test = surprise_train_test_split(data)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NZytxBdtaOTf"},"source":["def cross_val_score(estimator, X, scoring=None, cv=None):\n","  cvres_random = cross_validate(estimator, X, cv=cv, measures = [scoring])\n","  return cvres_random[f'test_{scoring}']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PTIaVSlWbULV"},"source":["# parameter selection"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cCnvTU0bigkA","executionInfo":{"status":"ok","timestamp":1617889578511,"user_tz":-180,"elapsed":22652,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"067eb7c7-e02c-4ea8-9fd1-6633ce037437"},"source":["alg_random = NormalPredictor()\n","\n","cross_val_score(alg_random, data, cv=5, scoring = 'rmse').mean()\n","\n","#for trainset, testset in kf.split(data):\n","#    alg_random.fit(trainset)\n","#    predictions = alg_random.test(testset)\n","#    accuracy.rmse(predictions, verbose=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.3327922343701768"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"kSjT5lCGu_0b"},"source":["import time"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RpbJ7PCuzCIp","executionInfo":{"status":"ok","timestamp":1617889713851,"user_tz":-180,"elapsed":89441,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"9395f1ef-2cca-49a2-b328-d1e74ce811c8"},"source":["start = time.time()\n","alg_knn = KNNWithMeans(k=5, verbose=False)\n","\n","print(cross_val_score(alg_knn, data, cv=5, scoring = 'rmse').mean())\n","print(time.time()-start)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["88.88630986213684"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jg8pFaIZcBlf","executionInfo":{"status":"ok","timestamp":1617716959466,"user_tz":-180,"elapsed":65576,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"3b566c87-6031-4c5c-8d3b-cf77fb181ad2"},"source":["alg_knn_z = KNNWithZScore(k=5, verbose=False)\n","\n","cross_val_score(alg_knn_z, data, cv=5, scoring = 'rmse').mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.926951581272351"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"id":"fcXmS7SlOJUZ"},"source":["param_grid = {'k': range(1, 10),\n","              'sim_options': {'name': ['msd', 'cosine', 'pearson'],\n","                              'user_based': [False, True]},\n","              'verbose' : [False]\n","              }\n","\n","gs = GridSearchCV(KNNWithMeans, param_grid, measures=['rmse'], cv=kf)\n","gs.fit(data)\n","\n","print(gs.best_score['rmse'])\n","print(gs.best_params['rmse'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QIuFxubeiofV"},"source":["#alg_knn_p = KNNWithMeans(k=9, verbose=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PGrNH5C9gmgn"},"source":["#recs = pd.DataFrame({'book_id' : [], 'predicted_rating' : []})\n","#for id in ratings_random.book_id.unique():\n","#  rat = alg_knn_p.predict(58, id).est\n","#  #print(rat)\n","#  recs = recs.append({'book_id' : id, 'predicted_rating' : rat},ignore_index=True)\n","#  #print(recs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r2Ngnle5kCyQ"},"source":["#recs.loc[~recs['book_id'].isin(ratings_random.loc[ratings_random['user_id']==58].book_id)].sort_values('predicted_rating', ascending = False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nvqgfR2VfEmT","executionInfo":{"status":"ok","timestamp":1617891855074,"user_tz":-180,"elapsed":598496,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"b2a439f3-2edb-460b-b320-d3d0155aa6f2"},"source":["#param_grid_svd = {'reg_all': np.linspace(0.1, 1, 10),\n","#                  'reg_bu': np.linspace(0.1, 1, 10),\n","#                  'reg_bi': np.linspace(0.1, 1, 10),\n","#                  'verbose' : [False]\n","#              }\n","\n","param_grid_svd = {'n_factors': range(10,110,10),\n","                  'verbose' : [False]\n","              }\n","\n","gssvd = GridSearchCV(SVD, param_grid_svd, measures=['rmse'], cv=kf)\n","gssvd.fit(data)\n","\n","print(gssvd.best_score['rmse'])\n","print(gssvd.best_params['rmse'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.8682505108288174\n","{'n_factors': 20, 'verbose': False}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6g7BRwvcjaAt"},"source":["param_grid_svdpp = {'n_factors': range(10,50,4),\n","                  'verbose' : [False]\n","              }\n","\n","gssvdpp = GridSearchCV(SVDpp, param_grid_svdpp, measures=['rmse'], cv=kf)\n","gssvdpp.fit(data)\n","\n","print(gssvdpp.best_score['rmse'])\n","print(gssvdpp.best_params['rmse'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"aZmtW0QxFc59"},"source":["# recall presision"]},{"cell_type":"code","metadata":{"id":"pkIEZ48Q_rFr"},"source":["def predcit_list(algo, user_id, n=5, verbose=False):\n","  start = time.time()\n","  data_pred = data.build_full_trainset()\n","  algo.fit(data_pred)\n","\n","  recs = pd.DataFrame({'book_id' : [], 'predicted_rating' : []})\n","  for id in ratings_random.book_id.unique():\n","    rat = algo.predict(58, id).est\n","    #print(rat)\n","    recs = recs.append({'book_id' : id, 'predicted_rating' : rat},ignore_index=True)\n","    #print(recs)\n","\n","  result = recs.loc[~recs['book_id'].isin(ratings_random.loc[ratings_random['user_id']==user_id].book_id)].sort_values('predicted_rating', ascending = False)\n","  if verbose == True:\n","    print('Seconds: ', time.time()-start)\n","  return result"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"9M4ac9KzAUQr","executionInfo":{"status":"error","timestamp":1618565101808,"user_tz":-180,"elapsed":685,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"231eafde-1491-4ade-b005-ddb73605521e"},"source":["algo_test = KNNWithMeans(k=9, verbose=False)\n","predcit_list(algo_test, 58, 10, verbose=True)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-99-8309cc0797eb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0malgo_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mKNNWithMeans\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mpredcit_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malgo_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m58\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-98-1b8431be9c88>\u001b[0m in \u001b[0;36mpredcit_list\u001b[0;34m(algo, user_id, n, verbose)\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0;32mimport\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m   \u001b[0mstart\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m   \u001b[0mdata_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuild_full_trainset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m   \u001b[0malgo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'build_full_trainset'"]}]},{"cell_type":"code","metadata":{"id":"IJs-s4cdSvZu"},"source":["algo_test = SVD(n_factors=20, verbose=False)\n","predcit_list(algo_test, 58, 10, verbose=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8AHlIzBRFf4o"},"source":["def precision_recall_at_k(predictions, k=10, threshold=3.5):\n","    \"\"\"Return precision and recall at k metrics for each user\"\"\"\n","\n","    # First map the predictions to each user.\n","    from collections import defaultdict\n","    user_est_true = defaultdict(list)\n","    for uid, _, true_r, est, _ in predictions:\n","        user_est_true[uid].append((est, true_r))\n","\n","    precisions = dict()\n","    recalls = dict()\n","    for uid, user_ratings in user_est_true.items():\n","\n","        # Sort user ratings by estimated value\n","        user_ratings.sort(key=lambda x: x[0], reverse=True)\n","\n","        # Number of relevant items\n","        n_rel = sum((true_r >= threshold) for (_, true_r) in user_ratings)\n","\n","        # Number of recommended items in top k\n","        n_rec_k = sum((est >= threshold) for (est, _) in user_ratings[:k])\n","\n","        # Number of relevant and recommended items in top k\n","        n_rel_and_rec_k = sum(((true_r >= threshold) and (est >= threshold))\n","                              for (est, true_r) in user_ratings[:k])\n","\n","        # Precision@K: Proportion of recommended items that are relevant\n","        # When n_rec_k is 0, Precision is undefined. We here set it to 0.\n","\n","        precisions[uid] = n_rel_and_rec_k / n_rec_k if n_rec_k != 0 else 0\n","\n","        # Recall@K: Proportion of relevant items that are recommended\n","        # When n_rel is 0, Recall is undefined. We here set it to 0.\n","\n","        recalls[uid] = n_rel_and_rec_k / n_rel if n_rel != 0 else 0\n","\n","    return precisions, recalls"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"X-8j9RcRJ44Y"},"source":["algo = KNNWithMeans(k=9, verbose=False)\n","\n","algo.fit(data_train)\n","predictions = algo.test(data_test)\n","precisions, recalls = precision_recall_at_k(predictions, k=5, threshold=4)\n","\n","# Precision and recall can then be averaged over all users\n","print(sum(prec for prec in precisions.values()) / len(precisions))\n","print(sum(rec for rec in recalls.values()) / len(recalls))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rZ9wTQ6jKNc0"},"source":["algo_svd = SVD(n_factors=20, verbose=False)\n","\n","algo_svd.fit(data_train)\n","predictions = algo_svd.test(data_test)\n","precisions, recalls = precision_recall_at_k(predictions, k=5, threshold=4)\n","\n","# Precision and recall can then be averaged over all users\n","print(sum(prec for prec in precisions.values()) / len(precisions))\n","print(sum(rec for rec in recalls.values()) / len(recalls))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bp5glPyob4X8"},"source":["# so deeep"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZXEjlihuhMWI","executionInfo":{"status":"ok","timestamp":1617906029424,"user_tz":-180,"elapsed":8746,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"55fb75ab-996a-41af-c087-743c74a47c3f"},"source":["!pip install git+https://github.com/maciejkula/spotlight.git@master#egg=spotlight"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting spotlight\n","  Cloning https://github.com/maciejkula/spotlight.git (to revision master) to /tmp/pip-install-ol21qa2z/spotlight\n","  Running command git clone -q https://github.com/maciejkula/spotlight.git /tmp/pip-install-ol21qa2z/spotlight\n","Requirement already satisfied: torch>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spotlight) (1.8.1+cu101)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from torch>=0.4.0->spotlight) (1.19.5)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=0.4.0->spotlight) (3.7.4.3)\n","Building wheels for collected packages: spotlight\n","  Building wheel for spotlight (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for spotlight: filename=spotlight-0.1.6-cp37-none-any.whl size=33921 sha256=a8f5ce49ab70e6e6d38c1d9c58b8e7083507c96e6469e069239927d834fb6edd\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-z6v6yp74/wheels/de/0f/85/71b17c59d32cb9d29c31d4ffb16eb14f4cc153f1e28c7a3efb\n","Successfully built spotlight\n","Installing collected packages: spotlight\n","Successfully installed spotlight-0.1.6\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2LPoZh4Rb5hl"},"source":["import torch\n","import spotlight"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rUOqARUthVME"},"source":["from spotlight.interactions import Interactions\n","\n","data = Interactions(*[np.array(i) for _, i in ratings_random.items()])\n","data_train = Interactions(*[np.array(i) for _, i in ratings_train.items()])\n","data_test = Interactions(*[np.array(i) for _, i in ratings_test.items()])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9pECjqc1m-6G","executionInfo":{"status":"ok","timestamp":1617907727122,"user_tz":-180,"elapsed":18825,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"868bc0b3-dd49-435d-c1dc-a8e5cab5c020"},"source":["from spotlight.evaluation import rmse_score\n","from spotlight.factorization.explicit import ExplicitFactorizationModel\n","\n","model = ExplicitFactorizationModel(loss='regression',\n","                                   embedding_dim=128,  # latent dimensionality\n","                                   n_iter=10,  # number of epochs of training\n","                                   batch_size=1024,  # minibatch size\n","                                   l2=1e-9,  # strength of L2 regularization\n","                                   learning_rate=1e-3,\n","                                   use_cuda=torch.cuda.is_available())\n","model.fit(data_train, verbose=True)\n","\n","rmse_score(model, data_test)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 0: loss 13.886664521540695\n","Epoch 1: loss 3.418573094539888\n","Epoch 2: loss 1.1470414896379724\n","Epoch 3: loss 0.8211444383527077\n","Epoch 4: loss 0.7350682071350163\n","Epoch 5: loss 0.6972380533750476\n","Epoch 6: loss 0.6719108909496422\n","Epoch 7: loss 0.6488575676991705\n","Epoch 8: loss 0.6267038788406634\n","Epoch 9: loss 0.6040727829984329\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["0.86410011960886"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"id":"kzVutBoNveeL"},"source":["param_grid = {'embedding_dim': np.logspace(1,10, num=10, base=2),\n","              'n_iter' : range(5,20)}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cSeA4TaQvVct","executionInfo":{"status":"ok","timestamp":1617906593214,"user_tz":-180,"elapsed":822,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"ebc54b2f-50af-4eb5-e0c7-f303af1d7c8e"},"source":["np.logspace(1,10, num=10, base=2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([   2.,    4.,    8.,   16.,   32.,   64.,  128.,  256.,  512.,\n","       1024.])"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"4XtZeLmAvRP8","executionInfo":{"status":"error","timestamp":1617907511458,"user_tz":-180,"elapsed":331604,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"8165cdf3-d6d2-47b9-a32a-41a7c55f60a4"},"source":["for i in np.logspace(1,10, num=10, base=2):\n","  k = int(i)\n","  model = ExplicitFactorizationModel(loss='regression',\n","                                   embedding_dim=64,  # latent dimensionality\n","                                   n_iter=10,  # number of epochs of training\n","                                   batch_size=k,  # minibatch size\n","                                   l2=1e-9,  # strength of L2 regularization\n","                                   learning_rate=1e-3,\n","                                   use_cuda=torch.cuda.is_available())\n","  model.fit(data_train, verbose=False)\n","\n","  print(i, rmse_score(model, data_test))"],"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-642543883fc1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m                                    \u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1e-3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m                                    use_cuda=torch.cuda.is_available())\n\u001b[0;32m---> 10\u001b[0;31m   \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrmse_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/spotlight/factorization/explicit.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, interactions, verbose)\u001b[0m\n\u001b[1;32m    221\u001b[0m                                                          batch_size=self._batch_size)):\n\u001b[1;32m    222\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 223\u001b[0;31m                 \u001b[0mpredictions\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_net\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbatch_user\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_item\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    224\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_loss\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'poisson'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    887\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_slow_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    888\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 889\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    890\u001b[0m         for hook in itertools.chain(\n\u001b[1;32m    891\u001b[0m                 \u001b[0m_global_forward_hooks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/spotlight/factorization/representations.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, user_ids, item_ids)\u001b[0m\n\u001b[1;32m     85\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     86\u001b[0m         \u001b[0muser_bias\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0muser_biases\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muser_ids\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 87\u001b[0;31m         \u001b[0mitem_bias\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitem_biases\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mitem_ids\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     88\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     89\u001b[0m         \u001b[0mdot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0muser_embedding\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mitem_embedding\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *input, **kwargs)\u001b[0m\n\u001b[1;32m    887\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_slow_forward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    888\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 889\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    890\u001b[0m         for hook in itertools.chain(\n\u001b[1;32m    891\u001b[0m                 \u001b[0m_global_forward_hooks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/modules/sparse.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    156\u001b[0m         return F.embedding(\n\u001b[1;32m    157\u001b[0m             \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpadding_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_norm\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 158\u001b[0;31m             self.norm_type, self.scale_grad_by_freq, self.sparse)\n\u001b[0m\u001b[1;32m    159\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    160\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mextra_repr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py\u001b[0m in \u001b[0;36membedding\u001b[0;34m(input, weight, padding_idx, max_norm, norm_type, scale_grad_by_freq, sparse)\u001b[0m\n\u001b[1;32m   1914\u001b[0m         \u001b[0;31m# remove once script supports set_grad_enabled\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1915\u001b[0m         \u001b[0m_no_grad_embedding_renorm_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_norm\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm_type\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1916\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0membedding\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpadding_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscale_grad_by_freq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msparse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1917\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1918\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"04nHBYzJpJB6"},"source":["pred = model.predict(user_ids = 58)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hk6Fp9KUrZqv","executionInfo":{"status":"ok","timestamp":1617907747233,"user_tz":-180,"elapsed":658,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"89b66222-9f89-47b1-a594-1543f3ff5f54"},"source":["ratings_random.loc[ratings_random['user_id']==58].book_id"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["629          26\n","630          58\n","631          18\n","632          14\n","633           2\n","           ... \n","5771155     279\n","5785098      61\n","5811024     702\n","5830792    9356\n","5853023    4576\n","Name: book_id, Length: 82, dtype: int64"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"mq3er7dspfRm","executionInfo":{"status":"ok","timestamp":1617907775351,"user_tz":-180,"elapsed":1279,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"a6cdff68-b6b8-41b4-fbd8-1ddf0b8683a2"},"source":["pred_list = pd.DataFrame(enumerate(pred), columns = ['book_id', 'predcited_rating'])\n","pred_list.loc[~pred_list['book_id'].isin(ratings_random.loc[ratings_random['user_id']==58].book_id)].sort_values(ascending=False, by = 'predcited_rating').head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>book_id</th>\n","      <th>predcited_rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7593</th>\n","      <td>7593</td>\n","      <td>5.120577</td>\n","    </tr>\n","    <tr>\n","      <th>8580</th>\n","      <td>8580</td>\n","      <td>4.996542</td>\n","    </tr>\n","    <tr>\n","      <th>5529</th>\n","      <td>5529</td>\n","      <td>4.977715</td>\n","    </tr>\n","    <tr>\n","      <th>9004</th>\n","      <td>9004</td>\n","      <td>4.920152</td>\n","    </tr>\n","    <tr>\n","      <th>3920</th>\n","      <td>3920</td>\n","      <td>4.866500</td>\n","    </tr>\n","    <tr>\n","      <th>7844</th>\n","      <td>7844</td>\n","      <td>4.842587</td>\n","    </tr>\n","    <tr>\n","      <th>9566</th>\n","      <td>9566</td>\n","      <td>4.834001</td>\n","    </tr>\n","    <tr>\n","      <th>2151</th>\n","      <td>2151</td>\n","      <td>4.804973</td>\n","    </tr>\n","    <tr>\n","      <th>9537</th>\n","      <td>9537</td>\n","      <td>4.804045</td>\n","    </tr>\n","    <tr>\n","      <th>4620</th>\n","      <td>4620</td>\n","      <td>4.792125</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      book_id  predcited_rating\n","7593     7593          5.120577\n","8580     8580          4.996542\n","5529     5529          4.977715\n","9004     9004          4.920152\n","3920     3920          4.866500\n","7844     7844          4.842587\n","9566     9566          4.834001\n","2151     2151          4.804973\n","9537     9537          4.804045\n","4620     4620          4.792125"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"markdown","metadata":{"id":"j169cuzswL3H"},"source":["# simplest similatrity"]},{"cell_type":"code","metadata":{"id":"w88tZlGoySbj"},"source":["ratings_s = sps.csr_matrix(ratings_random.pivot('user_id', 'book_id', 'rating').fillna(0).astype(int))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"drFJtz4_wLLs","executionInfo":{"status":"ok","timestamp":1618562641205,"user_tz":-180,"elapsed":831,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"959434f8-d819-4a86-d43d-ae9d029d6897"},"source":["from sklearn.neighbors import NearestNeighbors\n","\n","simple_knn = NearestNeighbors(metric='cosine', n_neighbors=10)\n","simple_knn.fit(ratings_s.transpose())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["NearestNeighbors(algorithm='auto', leaf_size=30, metric='cosine',\n","                 metric_params=None, n_jobs=None, n_neighbors=10, p=2,\n","                 radius=1.0)"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"N3cTac3R0sYk"},"source":["sim = simple_knn.kneighbors(ratings_s.transpose())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UqHs_ccq7HZW"},"source":["indices = sim[1].flatten()\n","data = sim[0].flatten()\n","indptr = np.array(list(range(0, 99901, 10)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mOeGm_Ce5mS-"},"source":["simmatrix = sps.csr_matrix((data, indices, indptr))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UbZ1aW-o8-_R"},"source":["def wiev_csr(self):\n","  return pd.DataFrame.sparse.from_spmatrix(self).head()\n","\n","sps.csr_matrix.wiev = wiev_csr"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rX1xbIU49d8F"},"source":["rating_vector = ratings_s[0, :]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":126},"id":"OJklKhJb-RH2","executionInfo":{"status":"ok","timestamp":1618564689184,"user_tz":-180,"elapsed":2507,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"4c22f5d3-db26-49c5-a044-6381ddf5c719"},"source":["rating_vector.wiev()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","      <th>11</th>\n","      <th>12</th>\n","      <th>13</th>\n","      <th>14</th>\n","      <th>15</th>\n","      <th>16</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>20</th>\n","      <th>21</th>\n","      <th>22</th>\n","      <th>23</th>\n","      <th>24</th>\n","      <th>25</th>\n","      <th>26</th>\n","      <th>27</th>\n","      <th>28</th>\n","      <th>29</th>\n","      <th>30</th>\n","      <th>31</th>\n","      <th>32</th>\n","      <th>33</th>\n","      <th>34</th>\n","      <th>35</th>\n","      <th>36</th>\n","      <th>37</th>\n","      <th>38</th>\n","      <th>39</th>\n","      <th>...</th>\n","      <th>9950</th>\n","      <th>9951</th>\n","      <th>9952</th>\n","      <th>9953</th>\n","      <th>9954</th>\n","      <th>9955</th>\n","      <th>9956</th>\n","      <th>9957</th>\n","      <th>9958</th>\n","      <th>9959</th>\n","      <th>9960</th>\n","      <th>9961</th>\n","      <th>9962</th>\n","      <th>9963</th>\n","      <th>9964</th>\n","      <th>9965</th>\n","      <th>9966</th>\n","      <th>9967</th>\n","      <th>9968</th>\n","      <th>9969</th>\n","      <th>9970</th>\n","      <th>9971</th>\n","      <th>9972</th>\n","      <th>9973</th>\n","      <th>9974</th>\n","      <th>9975</th>\n","      <th>9976</th>\n","      <th>9977</th>\n","      <th>9978</th>\n","      <th>9979</th>\n","      <th>9980</th>\n","      <th>9981</th>\n","      <th>9982</th>\n","      <th>9983</th>\n","      <th>9984</th>\n","      <th>9985</th>\n","      <th>9986</th>\n","      <th>9987</th>\n","      <th>9988</th>\n","      <th>9989</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows × 9990 columns</p>\n","</div>"],"text/plain":["   0     1     2     3     4     5     ...  9984  9985  9986  9987  9988  9989\n","0     0     0     0     0     0     0  ...     0     0     0     0     0     0\n","\n","[1 rows x 9990 columns]"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"code","metadata":{"id":"f_p7nY2u9FN4"},"source":["pred = (rating_vector * simmatrix)\n","pred_list = pred.wiev().transpose().sort_values(by=0, ascending = False).head(10).reset_index()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zbKgQLEN_cOv"},"source":["pred_list.columns = ['book_id', 'predicted_rating']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":343},"id":"xQPhE0jk_xFd","executionInfo":{"status":"ok","timestamp":1618565076737,"user_tz":-180,"elapsed":612,"user":{"displayName":"Yuriy Sosnin","photoUrl":"","userId":"11943109303922880437"}},"outputId":"927bb4c0-1fc0-4873-f745-a5fde90f26d6"},"source":["pred_list"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>book_id</th>\n","      <th>predicted_rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>142</td>\n","      <td>55.750864</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>45</td>\n","      <td>38.856039</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>30</td>\n","      <td>38.683713</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9973</td>\n","      <td>37.118814</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>60</td>\n","      <td>34.145646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>145</td>\n","      <td>34.043911</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>266</td>\n","      <td>31.508372</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>32</td>\n","      <td>31.446040</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>29</td>\n","      <td>29.858860</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>667</td>\n","      <td>28.748925</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   book_id  predicted_rating\n","0      142         55.750864\n","1       45         38.856039\n","2       30         38.683713\n","3     9973         37.118814\n","4       60         34.145646\n","5      145         34.043911\n","6      266         31.508372\n","7       32         31.446040\n","8       29         29.858860\n","9      667         28.748925"]},"metadata":{"tags":[]},"execution_count":97}]}]}